stages:
  - lint
  - build
  - docker
  - deploy

variables:
  DOCKER_IMAGE: registry.gitlab.com/your-group/academy
  PORT: 4000

cache:
  paths:
    - node_modules/

# ---------- Lint Stage ----------
lint:
  stage: lint
  image: node:20-alpine
  script:
    - npm ci
    - npm run lint
  only:
    - merge_requests
    - main

# ---------- Build Stage ----------
build:
  stage: build
  image: node:20-alpine
  script:
    - npm ci
    - npm install -g @angular/cli
    - npm run build:ssr:prod
  artifacts:
    paths:
      - dist/
  only:
    - main
    - develop

# ---------- Docker Build Stage ----------
docker:
  stage: docker
  image: docker:25.0.3
  services:
    - docker:dind
  script:
    - docker build -t $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA
  only:
    - main

# ---------- Deploy Stage ----------
deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
  script:
    - echo "ðŸš€ Deploying Academy app to server..."
    - ssh -o StrictHostKeyChecking=no user@your-server "
      docker pull $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA &&
      docker stop academy || true &&
      docker rm academy || true &&
      docker run -d -p 4000:4000 --name academy $DOCKER_IMAGE:$CI_COMMIT_SHORT_SHA
      "
  environment:
    name: production
    url: https://academy.yourdomain.com
  only:
    - main
